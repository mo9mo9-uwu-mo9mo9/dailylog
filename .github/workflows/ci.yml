name: CI (PR)

on:
  pull_request:
    branches: [main]

jobs:
  assistant-self-review-pre:
    name: Assistant Self Review (pre)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm
      - name: Install dependencies (non-blocking)
        id: npminstall
        run: |
          set +e
          npm install --no-audit --no-fund
          echo "status=$?" >> $GITHUB_OUTPUT
      - name: Update PR body (mark npm install)
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const pull_number = context.issue.number;
            const fork = context.payload.pull_request.head.repo.full_name !== `${owner}/${repo}`;
            if (fork) {
              core.notice('Fork PRのため本文更新はスキップします。');
              return;
            }
            const { data: pr } = await github.rest.pulls.get({ owner, repo, pull_number });
            let body = pr.body || '';
            const original = body;
            // 直後に [x] にしたいのは npm install 済み
            body = body.replace(/- \[ \]\s*`?npm install`?\s*済み/u, '- [x] `npm install` 済み');
            if (body !== original) {
              await github.rest.pulls.update({ owner, repo, pull_number, body });
              core.notice('「npm install 済み」を [x] に更新しました。');
            } else {
              core.notice('更新不要（既に [x] または該当項目なし）。');
            }
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install --no-audit --no-fund

      - name: Lint
        run: npx --yes eslint -c eslint.config.mjs . --ext js

      # Prettier は別PRでの一括整形を前提とし、本ワークフローでは未チェック

      - name: Format (check only)
        run: npm run format:check

      - name: Test
        run: npm test -- --run

  auto-self-review:
    name: Auto Self Review (A)
    if: github.event.pull_request.draft == false
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Mark checkboxes in PR body
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const pull_number = context.issue.number;

            const { data: pr } = await github.rest.pulls.get({ owner, repo, pull_number });
            let body = pr.body || '';

            const original = body;
            // A案: 自動でONにするのは「CI 緑（必須）」「npm install 済み」のみ
            const rules = [
              { re: /- \[ \]\s*CI\s*緑（必須）/u, to: '- [x] CI 緑（必須）' },
              { re: /- \[ \]\s*`?npm install`?\s*済み/u, to: '- [x] `npm install` 済み' },
            ];
            for (const r of rules) {
              body = body.replace(r.re, r.to);
            }

            if (body !== original) {
              await github.rest.pulls.update({ owner, repo, pull_number, body });
              core.notice('PR本文の「動作確認（必須）」の一部チェックを自動ONにしました。');
            } else {
              core.notice('更新不要（チェック済み、または該当項目なし）。');
            }
